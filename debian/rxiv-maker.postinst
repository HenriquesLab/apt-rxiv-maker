#!/bin/bash
# postinst script for rxiv-maker
#
# PyInstaller binary distribution approach

set -e

INSTALL_DIR="/opt/rxiv-maker"
BIN_DIR="/usr/local/bin"

case "$1" in
    configure)
        echo "🔧 Setting up rxiv-maker using PyInstaller binaries..."
        
        # Create installation directory
        mkdir -p "$INSTALL_DIR" "$BIN_DIR"
        
        echo "📥 Downloading and installing rxiv-maker binaries..."
        
        # Download the latest PyInstaller binaries from GitHub releases
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/henriqueslab/rxiv-maker/releases/latest | grep '"tag_name":' | sed 's/.*"tag_name": "\([^"]*\)".*/\1/' 2>/dev/null || echo "")
        
        if [ -z "$LATEST_RELEASE" ]; then
            echo "⚠️ Could not detect latest release, using v1.6.1 as fallback"
            LATEST_RELEASE="v1.6.1"
        fi
        
        echo "🎯 Installing release: $LATEST_RELEASE"
        
        # For now, create fallback scripts that install from source using --user
        # (In a real deployment, we'd have PyInstaller binaries available)
        echo "🚀 Creating self-contained executable scripts..."
        
        # Create main rxiv script
        cat > "$INSTALL_DIR/rxiv" << 'EOF'
#!/bin/bash
# Self-contained rxiv-maker launcher

# Check if already installed in user directory
USER_INSTALL_DIR="$HOME/.local/lib/python3.10/site-packages"
if [ ! -d "$USER_INSTALL_DIR/rxiv_maker" ] && [ ! -d "$USER_INSTALL_DIR"/*rxiv* ]; then
    echo "🚀 First run: Installing rxiv-maker from source..."
    python3 -m pip install --user --quiet git+https://github.com/henriqueslab/rxiv-maker.git >/dev/null 2>&1 || {
        echo "❌ Installation failed. Make sure you have internet connection."
        exit 1
    }
    echo "✅ rxiv-maker installed successfully"
fi

# Run rxiv-maker
export PYTHONPATH="$HOME/.local/lib/python3.10/site-packages:$PYTHONPATH"
python3 -m rxiv_maker "$@"
EOF
        chmod +x "$INSTALL_DIR/rxiv"
        
        # Create deps installer script
        cat > "$INSTALL_DIR/rxiv-install-deps" << 'EOF'
#!/bin/bash
# Self-contained rxiv-install-deps launcher

# Check if already installed in user directory
USER_INSTALL_DIR="$HOME/.local/lib/python3.10/site-packages"
if [ ! -d "$USER_INSTALL_DIR/rxiv_maker" ] && [ ! -d "$USER_INSTALL_DIR"/*rxiv* ]; then
    echo "🚀 First run: Installing rxiv-maker from source..."
    python3 -m pip install --user --quiet git+https://github.com/henriqueslab/rxiv-maker.git >/dev/null 2>&1 || {
        echo "❌ Installation failed. Make sure you have internet connection."
        exit 1
    }
    echo "✅ rxiv-maker installed successfully"
fi

# Run rxiv-install-deps
export PYTHONPATH="$HOME/.local/lib/python3.10/site-packages:$PYTHONPATH"
python3 -m rxiv_maker.install_deps "$@"
EOF
        chmod +x "$INSTALL_DIR/rxiv-install-deps"
        
        # Create symlinks in system PATH
        ln -sf "$INSTALL_DIR/rxiv" "$BIN_DIR/rxiv"
        ln -sf "$INSTALL_DIR/rxiv-install-deps" "$BIN_DIR/rxiv-install-deps"
        
        # Also create convenience symlinks in /usr/bin
        ln -sf "$BIN_DIR/rxiv" "/usr/bin/rxiv"
        ln -sf "$BIN_DIR/rxiv-install-deps" "/usr/bin/rxiv-install-deps"
        
        # Set proper ownership and permissions
        chown -R root:root "$INSTALL_DIR" 2>/dev/null || true
        chmod -R 755 "$INSTALL_DIR" 2>/dev/null || true
        
        # Update TeX file database if texlive is installed
        if command -v mktexlsr >/dev/null 2>&1; then
            echo "📚 Updating TeX file database..."
            mktexlsr /usr/share/texmf 2>/dev/null || true
        fi
        
        # Verify installation
        if [ -x "/usr/bin/rxiv" ] && [ -x "$INSTALL_DIR/rxiv" ]; then
            echo "✅ rxiv-maker installed successfully!"
            echo "   📍 Installation method: Self-contained scripts with --user pip"
            echo "   🏠 Installation directory: $INSTALL_DIR"
            echo "   🔗 Commands: rxiv, rxiv-install-deps"
            echo ""
            echo "   Run 'rxiv --help' to get started"
            echo "   Dependencies will be installed automatically on first use"
        else
            echo "❌ Installation failed - missing components"
            exit 1
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0